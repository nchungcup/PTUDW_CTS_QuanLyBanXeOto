@using PTUDW_CTS_QuanLyBanXeOto.Models
@model List<CartView>
@if (null != TempData["alertMessage"])
{
    <script type="text/javascript">
            alert("@TempData["alertMessage"]");
    </script>
}
<div style="background-color: black;">
    <section class="templatemo-top-section" style="margin-bottom: -20px">
        @await Component.InvokeAsync("MenuView")
        <div class="templatemo-welcome" style="margin: 0px">
            <div class="container">
                <div class="row">
                    <div class="col-lg-7 col-md-7 col-sm-6 col-xs-12">
                    </div>
                    <section class="ftco-section">
                        <div class="container">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="table-wrap">
                                        <table class="table">
                                            <thead class="thead-primary">
                                                <tr>
                                                    <th style="text-align: center">Ảnh</th>
                                                    <th style="text-align: center">Xe</th>
                                                    <th style="text-align: center">Màu sắc</th>
                                                    <th style="text-align: center">Đời</th>
                                                    <th style="text-align: center">Động cơ</th>
                                                    <th style="text-align: center">Giá</th>
                                                    <th style="text-align: center">&nbsp;</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var ca in Model)
                                                {
                                                <tr class="alert" role="alert">
                                                    <td>
                                                        <div class="img"><img style="max-width:100px;" src="~/img/Car/@ca.CarImage" /></div>
                                                    </td>
                                                    <td>
                                                        <div class="email">
                                                            <span>@ca.TenHangXe @ca.TenDongXe</span>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="email">
                                                            <span>@ca.MauSac</span>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="email">
                                                            <span>@ca.DoiXe</span>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="email">
                                                            <span>@ca.DongCo</span>
                                                        </div>
                                                    </td>
                                                        <td>@ca.GiaBan.ToString("N0") VNĐ</td>
                                                    <td>
                                                        <a class="btn btn-danger" href="@Url.Action("Remove", "Cart", new { dxid = ca.DongXeID, mausac = ca.MauSac, doixe = ca.DoiXe, dongco = ca.DongCo })">
                                                            x
                                                        </a>
                                                    </td>
                                                </tr>
                                                }
                                            </tbody>
                                        </table>
                                        <div style="display: inline-grid; justify-content: start; width: 100%; text-align: start; gap: 10px;">
                                            <p>Tổng Giá Trị Sản Phẩm: <b>@Model.Sum(s => s.GiaBan * s.SoLuong).ToString("N0") VNĐ</b></p>
                                            <p>Thuế: <b>@Model.Sum(s => s.GiaBan * s.SoLuong * 1 / 10).ToString("N0") VNĐ</b></p>
                                            <p>Chiết khấu: <input type="text" value="Chưa Áp Dụng" style="text-align: center;color: black;width: 41%;" readonly ></p>
                                            <p>Tổng Tiền: <b id="total">@((Model.Sum(s => s.GiaBan * s.SoLuong) + Model.Sum(s => s.GiaBan * s.SoLuong * 1 / 10)).ToString("N0")) VNĐ</b></p>
                                            <b id="totalText" class="text-muted"></b>
                                            <a class="btn btn-success" href="@Url.Action("ThanhToan", "Cart", new { tongtien = (Model.Sum(s => s.GiaBan * s.SoLuong) + Model.Sum(s => s.GiaBan * s.SoLuong * 1 / 10)), thue = Model.Sum(s => s.GiaBan * s.SoLuong * 1 / 10), cartview = Model})">Thanh Toán</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>
    </section>
</div>

<script>
    const total = document.getElementById("total");
    const totalText = document.getElementById("totalText");

    function numberToWords(number) {
        const units = ["", "một", "hai", "ba", "bốn", "năm", "sáu", "bảy", "tám", "chín"];
        const tens = ["", "", "hai mươi", "ba mươi", "bốn mươi", "năm mươi", "sáu mươi", "bảy mươi", "tám mươi", "chín mươi"];
        const scales = ["", "nghìn", "triệu", "tỷ"];

        if (number === 0) return "không";

        let words = [];
        let scaleIndex = 0;

        while (number > 0) {
            let chunk = number % 1000;
            if (chunk > 0) {
                let chunkWords = [];
                if (chunk >= 100) {
                    chunkWords.push(units[Math.floor(chunk / 100)] + " trăm");
                    chunk %= 100;
                }
                if (chunk >= 20) {
                    chunkWords.push(tens[Math.floor(chunk / 10)]);
                    chunk %= 10;
                } else if (chunk >= 10) {
                    chunkWords.push("mười");
                    chunk %= 10;
                }
                if (chunk > 0) {
                    chunkWords.push(units[chunk]);
                }
                words.unshift(chunkWords.join(" ") + " " + scales[scaleIndex]);
            }
            number = Math.floor(number / 1000);
            scaleIndex++;
        }

        return words.join(" ").trim();
    }

    function unformatNumber(number) {
        const numericValue = number.replace(/[^0-9]/g, ""); // Chỉ giữ lại các ký tự số (0-9)
        return parseInt(numericValue, 10) || 0; // Chuyển thành số nguyên, trả về 0 nếu không hợp lệ
    }


    function updateGiaChu(valueElement, chuElement) {
        const rawValue = unformatNumber(valueElement.textContent);
        if (!isNaN(rawValue) && rawValue > 0) {
            chuElement.textContent = numberToWords(rawValue) + " đồng"; // Chuyển thành chữ
        } else {
            chuElement.textContent = "không đồng"; // Giá trị mặc định khi không hợp lệ
        }
    }

    $(document).ready(window.onload = function () {
        updateGiaChu(total, totalText);
    });
</script>
